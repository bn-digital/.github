name: Staging
on:
  workflow_dispatch: { }
  push:
    branches:
      - latest
    paths:
      - '.github/workflows/staging.yml'
      - 'helmfile.yaml'
      - '**/*/Dockerfile'
      - '**/*/package.json'
      - 'packages/cms/api/**/*'
      - 'packages/cms/components/**/*'
      - 'packages/cms/config/**/*'
      - 'packages/cms/extensions/**/*'
      - 'packages/website/src/**/*'

jobs:
  pipeline:
    name: CI/CD Pipeline
    environment: staging
    runs-on: self-hosted
    env:
      ENV: staging
      VAULT_ENDPOINT: ${{ secrets.VAULT_ENDPOINT }}
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Import Vault secrets
        uses: hashicorp/vault-action@v2.3.1
        id: secrets
        with:
          url: ${{ env.VAULT_ENDPOINT }}
          method: github
          githubToken: ${{ env.GITHUB_TOKEN }}
          secrets: |
            infrastructure/data/bndigital/${{ env.ENV }}/kubernetes cluster | kubernetes_cluster ;
            infrastructure/data/bndigital/${{ env.ENV }}/digitalocean/api token | digitalocean_api_token ;
            infrastructure/data/bndigital/${{ env.ENV }}/registry docker-url | docker_url ;
            infrastructure/data/bndigital/${{ env.ENV }}/registry docker-username | docker_username ;
            infrastructure/data/bndigital/${{ env.ENV }}/registry docker-password | docker_password ;
            infrastructure/data/bndigital/${{ env.ENV }}/sonarqube host | sonarqube_host ;
            infrastructure/data/bndigital/${{ env.ENV }}/sonarqube token | sonarqube_token ;

      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: yarn

      - name: Generate env files
        run: yarn workspaces foreach run env --dist=.env.${{ env.ENV }}

      - name: Build packages
        run: yarn workspaces foreach run build

      - name: Run Sonar scanner
        uses: sonarsource/sonarqube-scan-action@v1.0.0
        env:
          SONAR_TOKEN: ${{ steps.secrets.outputs.sonarqube_token }}
          SONAR_HOST_URL: ${{ steps.secrets.outputs.sonarqube_host }}

      - name: Login Docker registry
        uses: docker/login-action@v1
        with:
          registry: ${{ steps.secrets.outputs.docker_url }}/${{ github.event.repository.name }}
          username: ${{ steps.secrets.outputs.docker_username }}
          password: ${{ steps.secrets.outputs.docker_password }}

      - name: Build Docker images
        uses: hiberbee/github-action-skaffold@1.9.0
        with:
          command: build
          repository: ${{ steps.secrets.outputs.docker_url }}/${{ github.event.repository.name }}

      - name: Setup DigitalOcean cli
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ steps.secrets.outputs.digitalocean_api_token }}

      - name: Configure Kubernetes context
        run: doctl kubernetes cluster kubeconfig save ${{ steps.secrets.outputs.kubernetes_cluster }} --set-current-context

      - name: Release Helm charts
        uses: hiberbee/github-action-helm@1.5.0
        with:
          helmfile-command: apply
          environment: ${{ env.ENV }}
